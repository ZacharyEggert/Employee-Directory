{"version":3,"sources":["utils/GlobalState.js","components/ListItem/index.js","components/ListHead/index.js","components/SearchBar/index.js","components/ListView/index.js","utils/API.js","components/Frame/index.js","App.js","index.js"],"names":["GlobalContext","createContext","Provider","initialState","employees","currentEmployee","sortBy","sortDirection","search","reducer","state","action","type","data","GlobalProvider","props","useReducer","dispatch","value","useGlobalContext","useContext","ListItem","employee","className","alt","src","picture","medium","login","salt","name","first","last","email","location","city","country","ListHead","sortArrow","handleClick","event","target","attributes","scope","onClick","SearchBar","globalState","placeholder","onChange","ListView","employeeList","list","newList","sort","a","b","reverse","sortList","map","toLowerCase","includes","getRandomEmployeeSet","axios","get","responseType","headers","then","response","results","array","window","Employees","Frame","useEffect","App","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fe11fd2.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\r\n\r\nconst GlobalContext = createContext();\r\nconst { Provider } = GlobalContext;\r\n\r\nconst initialState = {\r\n  employees:[],\r\n  currentEmployee:null,\r\n  sortBy:'first',\r\n  sortDirection:true,\r\n  search:''\r\n\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'addEmployee':\r\n      return {...state, employees:[...state.employees, action.data]}\r\n    case 'addEmployeeBulk':\r\n      return {...state, employees:[...state.employees, ...action.data ]}\r\n    case 'toggleSortDirection':\r\n      return {...state, sortDirection:!state.sortDirection}\r\n    case 'sortBy':\r\n      return {...state, sortBy:action.data}\r\n    case 'setCurrentEmployee':\r\n      return {...state, currentEmployee:action.data}\r\n    case 'unsetCurrentEmployee':\r\n      return {...state, currentEmployee:null}\r\n    case 'setSearch':\r\n      return {...state, search:action.data}\r\n      \r\n    default: return state;\r\n  }\r\n};\r\n\r\nconst GlobalProvider = ({...props }) => {\r\n  const [state, dispatch] = useReducer(reducer, {...initialState});\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useGlobalContext = () => {\r\n  return useContext(GlobalContext);\r\n};\r\n\r\nexport { GlobalProvider, useGlobalContext };\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"../../utils/GlobalState\";;\r\n\r\n\r\nconst ListItem = (props) => {\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [globalStore, dispatch] = useGlobalContext();\r\n\r\n    // console.log({globalStore, dispatch});\r\n\r\n    const {employee} = props;\r\n\r\nreturn (\r\n    <tr>\r\n        <td className='py-4'><img className='object-center mx-auto rounded-full' alt='thumb' src={employee.picture.medium}/></td>\r\n        <td className='py-4'>{employee.login.salt}</td>\r\n        <td className='py-4'>{employee.name.first}</td>\r\n        <td className='py-4'>{employee.name.last}</td>\r\n        <td className='py-4'>{employee.email}</td>\r\n        <td className='py-4'>{employee.location.city + ', ' + employee.location.state + ', ' + employee.location.country}</td>\r\n    </tr>\r\n)\r\n}\r\n\r\nexport default ListItem;","import React from \"react\";\r\n\r\nconst ListHead = (props) => {\r\n\r\n    const {sortBy, sortDirection, dispatch} = props\r\n\r\n    const sortArrow = () => {\r\n        if (sortDirection ) {\r\n            return <span>&nbsp;▲</span>\r\n        } else {\r\n            return <span>&nbsp;▼</span>\r\n        }\r\n    }\r\n\r\n    const handleClick  = (event) => {\r\n        if (event.target.attributes.name.value === sortBy){\r\n            dispatch({type: 'toggleSortDirection'})\r\n        }else{\r\n            if(!sortDirection){\r\n                dispatch({type: 'toggleSortDirection'});\r\n            }\r\n            dispatch({type: 'sortBy', data:event.target.attributes.name.value})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <thead>\r\n            <tr className=''>\r\n                <th scope='col' className='w-1/6 pt-4 pb-4 bg-gray-100'>Photo</th>\r\n\r\n                <th scope='col' className='w-1/12 pt-4 pb-4 bg-gray-100'>#ID</th>\r\n\r\n                <th scope='col' className='w-1/6 pt-4 pb-4 bg-gray-100' name='first' onClick={handleClick}>\r\n                    First Name\r\n                    {sortBy==='first' ? (\r\n                        sortArrow()\r\n                    ) : null}\r\n                </th>\r\n\r\n                <th scope='col' className='w-1/6 pt-4 pb-4 bg-gray-100' name='last' onClick={handleClick}>\r\n                    Last Name\r\n                    {sortBy==='first' ? null : (\r\n                        sortArrow()\r\n                    )}\r\n                </th>\r\n\r\n                <th scope='col' className='w-1/6 pt-4 pb-4 bg-gray-100'>Email</th>\r\n\r\n                <th scope='col' className='w-1/6 pt-4 pb-4 bg-gray-100'>Location</th>\r\n            \r\n            </tr>\r\n        </thead>     \r\n    )\r\n}\r\n\r\nexport default ListHead","import React from 'react';\r\n\r\nimport { useGlobalContext } from '../../utils/GlobalState';\r\n\r\nconst SearchBar = () => {\r\n\r\n    const [globalState, dispatch] = useGlobalContext();\r\n\r\n    const handleSearch = (event) => {\r\n        dispatch({type:'setSearch', data: event.target.value})\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className='flex flex-row items-center content-center py-2'>\r\n            <input className='flex-1 text-center' placeholder='Search' value={globalState.search} onChange={handleSearch}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchBar","import React from \"react\";\r\nimport ListItem from '../ListItem';\r\nimport ListHead from \"../ListHead\";\r\nimport { useGlobalContext } from \"../../utils/GlobalState\";\r\nimport SearchBar from \"../SearchBar\";\r\n\r\n\r\n\r\nconst ListView = (props) => {\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [globalState, dispatch] = useGlobalContext();\r\n\r\n    const sortList = (list) => {\r\n\r\n\r\n        let newList = [...list];\r\n        const {sortBy, sortDirection} = globalState;\r\n\r\n\r\n        const algorithmAlphabetical = (a, b) => {\r\n            if( a.name[sortBy] < b.name[sortBy]){\r\n                return -1;\r\n            }\r\n            if( b.name[sortBy] < a.name[sortBy]){\r\n                return 1;\r\n            }\r\n            return 0;\r\n        }\r\n\r\n        newList.sort(algorithmAlphabetical)\r\n\r\n        newList = sortDirection ? newList : newList.reverse();\r\n\r\n        return newList;\r\n    }\r\n\r\n    let employeeList = [...globalState.employees]\r\n\r\n    employeeList = sortList(employeeList);\r\n\r\n\r\nreturn (\r\n    <div>\r\n        <SearchBar />\r\n\r\n        <table className='w-full'>\r\n            <ListHead sortBy={globalState.sortBy} sortDirection={globalState.sortDirection} dispatch={dispatch}/>\r\n            <tbody>\r\n                {employeeList.map(employee => {\r\n                    if(employee.name.first.toLowerCase().includes(globalState.search.toLowerCase())\r\n                    ||employee.name.last.toLowerCase().includes(globalState.search.toLowerCase)){\r\n                        return (\r\n                        <ListItem employee={employee} key={employee.email}/>\r\n                        )\r\n                    }else{return null}\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default ListView;","import axios from \"axios\";\r\n\r\nconst getRandomEmployee = () => {\r\n    const response = axios.get('https://randomuser.me/api/?nat=us,ca,de', \r\n    {responseType:'json', headers: {\"Access-Control-Allow-Origin\": \"*\"}})\r\n\r\n    const data = response.data.results;\r\n    console.log(data);\r\n    return data\r\n}\r\n\r\nconst getRandomEmployeeSet = () => {\r\n    return axios.get('https://randomuser.me/api/?results=50&nat=us,ca,de', \r\n    {responseType:'json', headers: {\"Access-Control-Allow-Origin\": \"*\"}})\r\n    .then(response => response.data.results)\r\n    .then(array => {\r\n        return array\r\n    })\r\n}\r\n\r\nwindow.Employees = getRandomEmployeeSet;\r\n\r\nexport {getRandomEmployee, getRandomEmployeeSet}","import React, { useEffect } from 'react';\r\nimport ListView from '../ListView';\r\nimport { useGlobalContext } from '../../utils/GlobalState';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nimport {getRandomEmployee, getRandomEmployeeSet} from '../../utils/API';\r\n\r\nconst Frame = () => {\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [globalStore, dispatch] = useGlobalContext();\r\n\r\n    // console.log({globalStore, dispatch});\r\n\r\n\r\n    useEffect(() => {\r\n        getRandomEmployeeSet().then(data => {dispatch({type:'addEmployeeBulk', data})})\r\n    }, [dispatch])\r\n\r\n    // const logStore = () => {\r\n    //     console.log(globalStore);\r\n    // }\r\n\r\n\r\nreturn (\r\n    <div>\r\n        <ListView />\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Frame;","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport { GlobalProvider } from './utils/GlobalState';\r\nimport Frame from './components/Frame'\r\n\r\nconst App = (props) => {\r\n\r\n    \r\nreturn (\r\n    <GlobalProvider >\r\n    <div>\r\n        <Router>\r\n        <Switch>\r\n            <Route path=\"/\" render={() => {return <Frame />}} />\r\n        </Switch>\r\n        </Router>\r\n    </div>\r\n    </GlobalProvider>  \r\n);\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}